// Code generated by MockGen. DO NOT EDIT.
// Source: git/remote/git_remote_list.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/neel1996/gitconvex/graph/model"
)

// MockList is a mock of List interface.
type MockList struct {
	ctrl     *gomock.Controller
	recorder *MockListMockRecorder
}

// MockListMockRecorder is the mock recorder for MockList.
type MockListMockRecorder struct {
	mock *MockList
}

// NewMockList creates a new mock instance.
func NewMockList(ctrl *gomock.Controller) *MockList {
	mock := &MockList{ctrl: ctrl}
	mock.recorder = &MockListMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockList) EXPECT() *MockListMockRecorder {
	return m.recorder
}

// GetAllRemotes mocks base method.
func (m *MockList) GetAllRemotes() []*model.RemoteDetails {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllRemotes")
	ret0, _ := ret[0].([]*model.RemoteDetails)
	return ret0
}

// GetAllRemotes indicates an expected call of GetAllRemotes.
func (mr *MockListMockRecorder) GetAllRemotes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllRemotes", reflect.TypeOf((*MockList)(nil).GetAllRemotes))
}
