# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type HealthCheckParams{
    os: String!
    git: String!
}

type FetchRepoParams{
    repoId: [String!]
    repoName: [String!]
    repoPath: [String!]
}

type AddRepoParams{
    repoId: String!
    status: String!
    message: String!
}

type GitRepoStatusResults {
    gitRemoteData: String
    gitRepoName: String
    gitBranchList: [String]
    gitAllBranchList: [String]
    gitCurrentBranch: String
    gitRemoteHost: String
    gitTotalCommits: Float
    gitLatestCommit: String
    gitTotalTrackedFiles: Int
}

type GitFolderContentResults{
    trackedFiles: [String]!
    fileBasedCommits: [String]!
}

type Query {
    healthCheck: HealthCheckParams!
    fetchRepo: FetchRepoParams!
    gitRepoStatus(repoId: String!): GitRepoStatusResults!
    gitFolderContent(repoId: String!): GitFolderContentResults!
    gitCommitLogs(repoId: String!, skipLimit: String!): gitCommitLogResults!
}

type gitCommitLogResults {
    totalCommits: Int
    commits: [gitCommits]
}

type gitCommits {
    hash: String
    author: String
    commitTime: String
    commitMessage: String
    commitRelativeTime: String
    commitFilesCount: Int
}

type BranchDeleteStatus{
    status: String!
}

type FetchResult{
    status: String!
    fetchedItems: [String]!
}

type PullResult{
    status: String!
    pulledItems: [String]!
}

type Mutation {
    addRepo(repoName: String!, repoPath: String!, cloneSwitch: Boolean!, repoURL: String, initSwitch: Boolean!): AddRepoParams!
    addBranch(repoId: String!, branchName: String!): String!
    checkoutBranch(repoId: String!, branchName: String!): String!
    deleteBranch(repoId: String!, branchName: String!, forceFlag: Boolean!): BranchDeleteStatus!
    addRemote(repoId: String!, remoteName: String!, remoteUrl: String!): String!
    fetchFromRemote(repoId: String!, remoteUrl: String, remoteBranch: String): FetchResult!
    pullFromRemote(repoId: String!, remoteUrl: String, remoteBranch: String): PullResult!
}
